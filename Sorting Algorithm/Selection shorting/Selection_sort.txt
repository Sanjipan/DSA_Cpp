Selection short algorithm

 -> Selection Short Algorithm,specifically an in-place comparison sort. 
 -> It has O(n^2) time complexity, making it inefficient on large lists.
 -> The algorithm divides the input list into two parts:
        the sublist of iteams alrady shorted, which is built up from left to right at the front(left) of the list, and the sublist of items remaining to be sorted that occupy the rest of the list.
 -> Initially the sorted sublist is empty and the unsorted sublist is the entire input list.
 -> The algorithm proceeds by finding the smallest(or largest, depending on sorting order) element in the unsorted sublist,excanging(swapping) in with the leftmost unsorted elemenst (putting it in sorted order), and moving the sublist bounfaries one elementto the right.

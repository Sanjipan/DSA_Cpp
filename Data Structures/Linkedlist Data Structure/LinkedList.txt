Operations of Linked List-->
1>Traversiong a linked list.
2>Append a new node(to the end) of a list.
3>Prepend a new node(to start) of list.
4>Inserting a new node to a specific position in the list.
5>Deleting a node from the list.
6>Updating a node in the list.

Creating a node-->
class Node{
    public:
        int key;
        int data;
        Node* next;

        Node()
        {
            key = 0;
            data = 0;
            next = NULL; 
        }

        Node(int k, int d)
        {
            key = k;
            data = d;
            next = NULL;
        }
};

main-->
int main()
{
    Node n1(1,10);
    Node n2(2.20); 
    Node n3();
    Node n4();

    CircularLinkedList c        <---CircularLinkedList is another class(like class Node),inside it we will have one data-member(head* ptr)type of this is node only(Node*head)
    c.appendNode(&n1);
    c.appendNode(&n2);
    c.prependNode(&n3);
    c.insertNodeAfter(1,&n4);
    c.deleteNode(3);
    c.updateNode(4,55);
}
------------------------------------------------


